% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chronBuilding.R
\name{createChronMeasInputDf}
\alias{createChronMeasInputDf}
\title{Create a data frame for chron measurement data}
\usage{
createChronMeasInputDf(
  L,
  chron.num = NA,
  meas.table.num = NA,
  lab.id.var = "labID",
  age.14c.var = "age14C",
  age.14c.uncertainty.var = "age14CUnc",
  age.var = "age",
  age.uncertainty.var = "ageUnc",
  depth.var = "depth",
  reservoir.age.14c.var = "reservoirAge",
  reservoir.age.14c.uncertainty.var = "reservoirAge14C",
  rejected.ages.var = "rejected",
  split.ages = TRUE
)
}
\arguments{
\item{L}{A LiPD object - an R serialization of a single LiPD file. It's a list, and is typically created by `readLipd()`}

\item{chron.num}{Which chron number to get data from}

\item{meas.table.num}{an integer that corresponds to paleo.num measurementTable has the variable you want?}

\item{lab.id.var}{Lab Id variable name}

\item{age.14c.var}{Radiocarbon age variable name}

\item{age.14c.uncertainty.var}{Radiocarbon age uncertainty variable name}

\item{age.var}{Calibrated age variable name}

\item{age.uncertainty.var}{Calibrated age uncertainty variable name}

\item{depth.var}{Depth variable name}

\item{reservoir.age.14c.var}{Reservoir age variable name}

\item{reservoir.age.14c.uncertainty.var}{Reservoir age uncertainty variable name}

\item{rejected.ages.var}{Rejected ages variable name}

\item{split.ages}{if there's an age_type column, and only one age column, intelligently split between age and age14C (default = TRUE)}
}
\value{
a standardized dataframe of chron measurements
}
\description{
Create a data frame for chron measurement data
}
\seealso{
Other utility: 
\code{\link{askUser}()},
\code{\link{concatEnsembleTimeseries}()},
\code{\link{convertAD2BP}()},
\code{\link{convertBP2AD}()},
\code{\link{gaussianize}()},
\code{\link{generateEnsembleFromUncertainty}()},
\code{\link{getLastVarString}()},
\code{\link{getOs}()},
\code{\link{heuristicUnits}()},
\code{\link{loadRemote}()},
\code{\link{pullInstance}()},
\code{\link{simulateAutoCorrelatedUncertainty}()},
\code{\link{stringifyVariables}()},
\code{\link{surrogateDataFun}()}
}
\concept{utility}
